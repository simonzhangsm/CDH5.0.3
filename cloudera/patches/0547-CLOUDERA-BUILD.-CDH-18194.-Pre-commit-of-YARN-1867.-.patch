From 67473542693afc837ec13f93f318e8f822c2dc50 Mon Sep 17 00:00:00 2001
From: Karthik Kambatla <kasha@cloudera.com>
Date: Mon, 24 Mar 2014 19:09:51 -0700
Subject: [PATCH 547/597] CLOUDERA-BUILD. CDH-18194. Pre-commit of YARN-1867. Fix NPE during App ACL check while using REST API

---
 .../server/security/ApplicationACLsManager.java    |   10 +++-
 .../security/TestApplicationACLsManager.java       |   47 ++++++++++++++++++++
 2 files changed, 55 insertions(+), 2 deletions(-)
 create mode 100644 hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/server/security/TestApplicationACLsManager.java

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java
index 75c8478..2d17c3a 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/security/ApplicationACLsManager.java
@@ -101,8 +101,14 @@ public boolean checkAccess(UserGroupInformation callerUGI,
       return true;
     }
 
-    AccessControlList applicationACL = this.applicationACLS
-        .get(applicationId).get(applicationAccessType);
+    AccessControlList applicationACL = null;
+    Map<ApplicationAccessType, AccessControlList> appAcls =
+        this.applicationACLS.get(applicationId);
+    if (appAcls == null) {
+      LOG.error("Couldn't find ACLs for application " + applicationId);
+    } else {
+      applicationACL = appAcls.get(applicationAccessType);
+    }
     if (applicationACL == null) {
       if (LOG.isDebugEnabled()) {
         LOG.debug("ACL not found for access-type " + applicationAccessType
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/server/security/TestApplicationACLsManager.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/server/security/TestApplicationACLsManager.java
new file mode 100644
index 0000000..ab3aa46
--- /dev/null
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/server/security/TestApplicationACLsManager.java
@@ -0,0 +1,47 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.yarn.server.security;
+
+import org.apache.hadoop.security.UserGroupInformation;
+import org.apache.hadoop.yarn.api.records.ApplicationAccessType;
+import org.apache.hadoop.yarn.api.records.ApplicationId;
+import org.apache.hadoop.yarn.conf.YarnConfiguration;
+import org.junit.Test;
+
+import java.io.IOException;
+
+import static org.junit.Assert.assertFalse;
+
+public class TestApplicationACLsManager {
+
+  @Test
+  public void testCheckAccessNoApplication() throws IOException {
+    YarnConfiguration conf = new YarnConfiguration();
+    conf.setBoolean(YarnConfiguration.YARN_ACL_ENABLE, true);
+    conf.set(YarnConfiguration.YARN_ADMIN_ACL, " ");
+
+    ApplicationACLsManager applicationACLsManager =
+        new ApplicationACLsManager(conf);
+
+    UserGroupInformation user = UserGroupInformation.createRemoteUser("user");
+    ApplicationId appId = ApplicationId.newInstance(123456, 1);
+    assertFalse(applicationACLsManager.checkAccess(user,
+        ApplicationAccessType.VIEW_APP,
+        UserGroupInformation.getCurrentUser().getUserName(), appId));
+  }
+}
-- 
1.7.0.4

